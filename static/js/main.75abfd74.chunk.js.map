{"version":3,"sources":["components/AppHeader/AppHeader.js","components/Layout/Layout.js","components/InputForm/InputForm.js","redux/contacts/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["AppHeader","CSSTransition","in","appear","timeout","classNames","className","Layout","children","InputForm","label","placeholder","type","value","onInput","onChange","e","target","addContact","name","number","payload","contact","id","uuidv4","removeContact","changeFilter","filter","ContactForm","state","notify","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSubmit","preventDefault","props","contacts","map","el","find","onAddContact","setState","handleInput","handleNumber","this","onSubmit","Component","mapDispatchToProps","contactActions","connect","items","onRemoveContact","toLowerCase","includes","TransitionGroup","component","onClick","onFilter","length","unmountOnExit","combineReducers","action","rootReducer","contactReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75abfd74.chunk.js","sourcesContent":["import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./AppHeader.css\";\nconst AppHeader = () => {\n  return (\n    <header>\n      <CSSTransition in={true} appear={true} timeout={500} classNames=\"logoIn\">\n        <h2 className=\"logo\">PhoneBook</h2>\n      </CSSTransition>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport \"./Layout.css\";\nconst Layout = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./InputForm.css\";\nconst InputForm = ({ label, placeholder, type, value, onInput }) => {\n  return (\n    <label>\n      <p className=\"labelName\">{label}</p>\n      <input\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onInput(e.target.value)}\n        className=\"input\"\n      ></input>\n    </label>\n  );\n};\n\nexport default InputForm;\n","import { v4 as uuidv4 } from \"uuid\";\n\nconst addContact = ({ name, number }) => ({\n  type: \"contact/add\",\n  payload: { contact: { id: uuidv4(), name, number } },\n});\n\nconst removeContact = (id) => {\n  return {\n    type: \"contact/remove\",\n    payload: { id },\n  };\n};\n\nconst changeFilter = (filter) => {\n  return {\n    type: \"contact/filter\",\n    payload: { filter },\n  };\n};\n\nexport default {\n  addContact,\n  removeContact,\n  changeFilter,\n};\n","import React, { Component } from \"react\";\nimport \"./ContactForm.css\";\nimport InputForm from \"../InputForm/InputForm\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport contactActions from \"../../redux/contacts/contactsActions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  notify = () =>\n    toast.error(\" This contact already exist!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (!name || !number) {\n      return;\n    }\n    const contactName = this.props.contacts.map((el) => {\n      return el.name;\n    });\n    const validation = contactName.find((el) => el === name);\n\n    validation === name ? this.notify() : this.props.onAddContact(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleInput = (value) => {\n    this.setState({ name: value });\n  };\n  handleNumber = (value) => {\n    this.setState({ number: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <ToastContainer />\n        <InputForm\n          label=\"Name\"\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter your name\"\n          onInput={this.handleInput}\n        />\n        <InputForm\n          label=\"Number\"\n          type=\"tel\"\n          value={number}\n          placeholder=\"Enter your number\"\n          onInput={this.handleNumber}\n        />\n        <button type=\"submit\" className=\"buttonSubmit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\nconst mapDispatchToProps = { onAddContact: contactActions.addContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./ContactList.css\";\nimport contactActions from \"../../redux/contacts/contactsActions\";\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className=\"contactsList\">\n      {contacts.map((contact) => (\n        <CSSTransition key={contact.id} timeout={250} classNames=\"contactIn\">\n          <li className=\"contactItem\">\n            <span className=\"contactText\">\n              {contact.name} : {contact.number}\n            </span>\n            <button\n              type=\"button\"\n              className=\"removeBtn\"\n              onClick={() => onRemoveContact(contact.id)}\n            >\n              X\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items.filter((contact) =>\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n  ),\n});\n\nconst mapDispatchToProps = { onRemoveContact: contactActions.removeContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactActions from \"../../redux/contacts/contactsActions\";\n\nimport \"./Filter.css\";\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <div className=\"filterContainer\">\n      <p className=\"filterTitle\">Find contact by name</p>\n      <label>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => onFilter(e.target.value)}\n          className=\"filterInput\"\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = { onFilter: contactActions.changeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport Layout from \"./components/Layout/Layout\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\nconst App = ({ contacts }) => {\n  return (\n    <Layout>\n      <AppHeader />\n      <ContactForm />\n      <CSSTransition\n        in={contacts.length > 1}\n        timeout={250}\n        classNames=\"filterIn\"\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      <ContactList />\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\n\nconst items = (state = [], action) => {\n  switch (action.type) {\n    case \"contact/add\":\n      return [...state, action.payload.contact];\n    case \"contact/remove\":\n      return state.filter((contact) => contact.id !== action.payload.id);\n\n    default:\n      return state;\n  }\n};\nconst filter = (state = \"\", action) => {\n  switch (action.type) {\n    case \"contact/filter\":\n      return action.payload.filter;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ items, filter });\n\n// onChangeFilter = (filter) => {\n//     this.setState({ filter });\n//   };\n//   addContact = ({ name, number }) => {\n//     const contact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n//     this.setState((prevState) => {\n//       return { contacts: [...prevState.contacts, contact] };\n//     });\n//   };\n//   removeContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(\n//           (contact) => contact.id !== contactId\n//         ),\n//       };\n//     });\n//   };\n","import { createStore, combineReducers } from \"redux\";\nimport contactReducer from \"./contacts/contactsReducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}